from abc import ABC, abstractmethod
from typing import override


class Command(ABC):
    """Represents a command in AEGIS."""

    STR_CONNECT = "CONNECT"
    STR_END_TURN = "END_TURN"
    STR_MOVE = "MOVE"
    STR_OBSERVE = "OBSERVE"
    STR_SAVE_SURV = "SAVE_SURV"
    STR_SEND_MESSAGE = "SEND_MESSAGE"
    STR_SLEEP = "SLEEP"
    STR_TEAM_DIG = "TEAM_DIG"
    STR_CONNECT_OK = "CONNECT_OK"
    STR_DISCONNECT = "DISCONNECT"
    STR_UNKNOWN = "UNKNOWN"
    STR_CMD_RESULT_END = "CMD_RESULT_END"
    STR_CMD_RESULT_START = "CMD_RESULT_START"
    STR_DEATH_CARD = "DEATH_CARD"
    STR_FWD_MESSAGE = "FWD_MESSAGE"
    STR_MESSAGES_END = "MESSAGES_END"
    STR_MESSAGES_START = "MESSAGES_START"
    STR_MOVE_RESULT = "MOVE_RESULT"
    STR_OBSERVE_RESULT = "OBSERVE_RESULT"
    STR_ROUND_END = "ROUND_END"
    STR_ROUND_START = "ROUND_START"
    STR_SAVE_SURV_RESULT = "SAVE_SURV_RESULT"
    STR_SLEEP_RESULT = "SLEEP_RESULT"
    STR_TEAM_DIG_RESULT = "TEAM_DIG_RESULT"

    @abstractmethod
    @override
    def __str__(self) -> str:
        pass
